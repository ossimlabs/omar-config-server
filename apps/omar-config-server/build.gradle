buildscript {
   repositories {
      mavenLocal()
      maven { url ossimMavenProxy }
   }
	dependencies {
        // classpath 'com.github.skhatri:gradle-s3-plugin:1.0.4'
        // classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.7.5"
        classpath 'com.bmuschko:gradle-docker-plugin:5.1.0'
        classpath 'io.ossim:gradleDefaults:1.8-SNAPSHOT'
	}
}

plugins {
	id 'org.springframework.boot' version '2.1.8.RELEASE'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'groovy'

    id "com.github.ben-manes.versions" version "0.25.0"
    id "org.sonarqube" version "2.8"
}

io.ossim.gradleDefaults.Variables.setAdditionalVariables(project)
io.ossim.gradleDefaults.Variables.setVersionVariables(project)
dockerBuildDir="${rootProject.projectDir}/docker"
version "${buildVersion}-${buildVersionTag}"
jarDestination = "${projectDir}/build/libs/${project.name}-${version}.jar"
io.ossim.gradleDefaults.Docker.addDockerTasks(project, dockerRegistryUrl, dockerRegistryUsername, dockerRegistryPassword, name, dockerImageTag, dockerBuildDir, jarDestination, ["BASE_IMAGE": "${dockerRegistryUrl}/${dockerBaseImage}:${dockerFromTag}"])
io.ossim.gradleDefaults.Openshift.addOpenshiftTasks(project, openshiftUrl, openshiftUsername, openshiftPassword, openshiftProjectName, openshiftServiceName,  dockerRegistryUrl, name, dockerImageTag)

sourceCompatibility = '1.8'

repositories {
	mavenLocal()
	maven { url ossimMavenProxy }
}

dependencies {
	implementation 'org.codehaus.groovy:groovy'
	implementation 'org.springframework.cloud:spring-cloud-config-server'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'	
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}
